<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="./WEB-INF/template.xhtml"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">

    <ui:define name="content">
        <h:outputStylesheet name="css/product-backlog.css" library="whisperio" />
        <h:outputScript name="js/jquery-2.1.3.js" library="jquery" target="head"/>
        <h:outputScript name="js/jquery-ui-1.11.14.js" library="jquery" target="head"/>

        <!-- Product Backlog boxes -->
        <div class="EmptyBox20"></div>
        <div class="Container25">
            <div class="EmptyBox50"></div>
        </div>
        <div class="Container50 Responsive">
            <div class="Container33 Responsive Unselectable">
                <div class="ContainerIndent TexAlCenter sandboxBlock">
                    <p:commandLink actionListener="#{productBacklogBean.useSandbox()}" update="productBacklogItems">
                        <div class="productBacklogBoxBlockDroppable">
                            <div class="productBacklogBoxBlock white">
                                <span class="Fs21">SandBox</span>
                            </div>
                        </div>
                    </p:commandLink>
                </div>
            </div>

            <div class="Container33 Responsive Unselectable">
                <div class="ContainerIndent TexAlCenter iceboxBlock">
                    <p:commandLink actionListener="#{productBacklogBean.useIcebox()}" update="productBacklogItems">
                        <div class="productBacklogBoxBlockDroppable">
                            <div class="productBacklogBoxBlock white">
                                <span class="Fs21">IceBox</span>
                            </div>
                        </div>
                    </p:commandLink>
                </div>
            </div>

            <div class="Container33 Responsive Unselectable">
                <div class="ContainerIndent TexAlCenter cultureboxBlock">
                    <p:commandLink actionListener="#{productBacklogBean.useCulturebox()}" update="productBacklogItems">
                        <div class="productBacklogBoxBlockDroppable">
                            <div class="productBacklogBoxBlock white">
                                <span class="Fs21">CultureBox</span>
                            </div>
                        </div>
                    </p:commandLink>
                </div>
            </div>
            <div class="Container33 Responsive Unselectable">
                <div class="ContainerIndent TexAlCenter startboxBlock">
                    <p:commandLink actionListener="#{productBacklogBean.useStartbox()}" update="productBacklogItems">
                        <div class="productBacklogBoxBlockDroppable">
                            <div class="productBacklogBoxBlock white">
                                <span class="Fs21">StartBox</span>
                            </div>
                        </div>
                    </p:commandLink>
                </div>
            </div>
            <div class="Container33 Responsive Unselectable">
                <div class="ContainerIndent TexAlCenter sprintboxBlock">
                    <p:commandLink actionListener="#{productBacklogBean.useSprintbox()}" update="productBacklogItems">
                        <div class="productBacklogBoxBlockDroppable">
                            <div class="productBacklogBoxBlock white">
                                <span class="Fs21">SprintBox</span>
                            </div>
                        </div>
                    </p:commandLink>
                </div>
            </div>
            <div class="Container33 Responsive Unselectable">
                <div class="ContainerIndent TexAlCenter harvestboxBlock">
                    <p:commandLink actionListener="#{productBacklogBean.useHarvestbox()}" update="productBacklogItems">
                        <div class="productBacklogBoxBlockDroppable">
                            <div class="productBacklogBoxBlock white">
                                <span class="Fs21">HarvestBox</span>
                            </div>
                        </div>
                    </p:commandLink>
                </div>
            </div>
        </div>

        <div class="EmptyBox20"></div>

        <!-- Product Backlog Items list -->
        <div class="Container10 Responsive">
            <div class="EmptyBox50"></div>
        </div>
        <div class="Container80 Responsive">
            <p:panel id="productBacklogItems">
                <ul id="productBacklogItemList" style="padding-left: 0px;">
                    <c:forEach items="#{productBacklogBean.selectedBoxBacklogItems}" var="item">
                        <li id="#{item.id}" class="Container100 Responsive productBacklogItem">
                            <div class="Container10 Responsive">
                                <h:outputText value="##{item.id}"/>
                            </div>
                            <div class="Container10 Responsive">
                                <h:outputText value="#{item.backlogItemType}"/>
                            </div>
                            <div class="Container60 Responsive">
                                <h:outputText value="#{item.title}" />
                            </div>
                            <div class="Container10 Responsive TexAlCenter">
                                <h:outputText value="#{item.businessValue.name}"/>
                            </div>
                            <div class="Container10 Responsive TexAlCenter">
                                <h:outputText value="#{item.estimation.name}"/>
                            </div>
                        </li>
                    </c:forEach>
                </ul>

                <!-- Move between different boxes -->
                <p:remoteCommand name="moveToBox" actionListener="#{productBacklogBean.moveProductBacklogItem()}" update="productBacklogItems"/>
                <p:remoteCommand name="sortProductBacklogItems" actionListener="#{productBacklogBean.sortProductBacklogItem()}" update="productBacklogItems"/>

                <script type="text/javascript">

                    //$('.productBacklogItem').draggable({
                    //    revert: true,
                    //    scope: 'movetobox',
                    //    zIndex: ++PrimeFaces.zindex
                    //});

                    $("#productBacklogItemList").sortable({
                        stop: function (event, ui) {
                            var productBacklogItemsOrder = "";
                            var prefix = "";
                            var productBacklogItems = document.getElementById("productBacklogItemList");
                            productBacklogItems = productBacklogItems.children;
                            for (i = 0; i &lt; productBacklogItems.length; i++) {
                                productBacklogItemsOrder = productBacklogItemsOrder + prefix + productBacklogItems[i].id;
                                prefix = ";";
                            }
                            console.log(productBacklogItemsOrder);
                            sortProductBacklogItems([{name: 'productBacklogItemsOrder', value: productBacklogItemsOrder}]);
                        }
                    });

                    $("#productBacklogItemList").disableSelection();
                    //$('.productBacklogBoxBlockDroppable').droppable({
                    //    hoverClass: 'productBacklogBoxBlockDroppableHover',
                    //    tolerance: 'pointer',
                    //    scope: 'movetobox',
                    //    drop: function (event, ui) {
                    //        var property = ui.draggable.find('.ui-treenode-label').text(),
                    //        droppedColumnId = $(this).parents('th:first').attr('id'),
                    //        dropPos = $(this).hasClass('dropleft') ? 0 : 1;
                    //
                    //        moveToBox([
                    //            {name: 'property', value: property}
                    //            , {name: 'droppedColumnId', value: droppedColumnId}
                    //            , {name: 'dropPos', value: dropPos}
                    //        ]);
                    //    }
                    //});

                </script>
            </p:panel>
        </div>

    </ui:define>

</ui:composition>